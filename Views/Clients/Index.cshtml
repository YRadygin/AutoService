@model IEnumerable<AutoService.Models.Clients>



<head>
	<script src="~/lib/jquery/jquery-1.12.4.min.js"></script>
	<link href="~/lib/jqueryui/themes/redmond/jquery-ui.css" rel="stylesheet" type="text/css" media="screen" />
	<link rel="stylesheet" type="text/css" media="screen" href="~/lib/jqGrid/css/ui.jqgrid.css" />
	<script src="~/lib/jqueryui/jquery-ui.min.js" type="text/javascript"></script>
	<script src="~/lib/jqGrid/js/i18n/grid.locale-en.js" type="text/javascript"></script>
	<script src="~/lib/jqGrid/js/jquery.jqGrid.min.js" type="text/javascript"></script>
	<script src="~/lib/jquery/jquery.maskedinput/jquery.maskedinput.min.js" type="text/javascript"></script>
	<script src="~/js/site.js"></script>
</head>

<div id="PlaceHolderHere"></div>

<div>
	<h4>Справочник клиентов</h4>
</div>
<div style="margin-top:0px">
	<hr>
</div>
<!--тАБЛИЦА С КЛИЕНТАМИ-->

<div class="wrapper" id="test">
	<div class="left_block">
		<table id="ClientsTable"></table>
		<div id="ClientsTablePager"></div>
	</div>
	<div class="right_block" id="test2">
		<table id="AvtoTable"></table>
		<div id="AutoTablePager"></div>

	</div>
</div>



<script type="text/javascript">
	var numberUsers = 0; //Ид пользователя для запроса в таблицу авто
	//Таблица клиентов
	$(document).ready(function () {
		$("#ClientsTable").jqGrid({
			url: '@Url.Action("GetClientList")', //Вытаскиваем клиентов в таблицу при загрузке страницы(для наглядности, при большой бд так делать нельзя)
			datatype: "json",
			colNames: ['Id', 'Фамилия Имя отчество', 'Пол', 'Телефон', 'Дата рождения', 'Email', 'Дата регистрации'],
			colModel: [
				{ name: 'Id', index: 'Id', width: 40, stype: 'text', sortable: true, editable: true, both:true},
				{ name: 'Fio', index: 'Fio', width: 200, sortable: true, editable: true, editoptions: { size: 30 } },
				{ name: 'Pol', index: 'Pol', width: 40, sortable: true, editable: true, edittype: 'select', editoptions: { value: "м:Мужской; ж:Женский" }},
				{
					name: 'Phone', index: 'Phone', width: 200, sortable: true, editable: true, classes: "grid-col",
					editoptions: {
						autocomplete: "off",
						dataInit: function (elem) {
							$(elem).mask("+7(999) 999-9999");
							$(this).val(elem);
						}
					}
				},
				{ name: 'DateBirdth', index: 'DateBirdth', width: 100, sortable: false, editable: true, edittype: 'text',
					editoptions: {
						autocomplete: "off",
						size: 10, maxlengh: 10,
						dataInit: function (element) {
							$(element).datepicker({ dateFormat: 'yy.mm.dd' })
						}
					}
				},

				{ name: 'Email', index: 'Email', width: 200, sortable: true, editable: true, editoptions: { size: 30 } },
				{  name: 'DateReg', index: 'DateReg', width: 100, sortable: false, editable: true, edittype: 'text',
					editoptions: {
						autocomplete: "off",
						size: 10, maxlengh: 10,
						dataInit: function (element) {
							$(element).datepicker({ dateFormat: 'yy.mm.dd' })
						}
					}
				}

			],
			loadonce: true,
			height: 350, // число отображаемых строк
			sortname: 'Id', // сортировка по умолчанию по столбцу Id
			sortorder: "desc", // порядок сортировки
			caption: "Клиенты",
			pager: "#ClientsTablePager",

			//При выборе строки вывод данных по авто клиента
			onSelectRow: function (id) {
				var grid = jQuery('#ClientsTable');
				numberUsers = grid.jqGrid('getCell', grid.jqGrid('getGridParam', 'selrow'), 'Id'); //Получаем значение ячейки ИД выделенной строки
				jQuery('#AvtoTable').jqGrid('setGridParam', {
					url: '@Url.Action("GetAutoList")',
					datatype: 'json',
					mtype: 'POST',
					postData: {
						id_cln: numberUsers
					}
				}).trigger('reloadGrid');
			},


		});


		$("#ClientsTable").jqGrid('navGrid', '#ClientsTablePager', {
			refresh: true,
			add: true, // добавление
			del: true, // удаление
			edit: true, // редактирование
			view: true, // просмотр записи

		},

			{ // Edit Clients
				height: 330,
				closeAfterEdit: true,
				editCaption: 'Измение данных клиента',
				bSubmit: "Сохранить",
				bCancel: "Отменить",

				beforeShowForm: function (form) {
					$('#Id', form).attr("disabled", true);
				},

				url: '@Url.Action("Edit")',
				afterComplete: function (response) {
					jQuery('#ClientsTable').jqGrid('setGridParam', {
					url: '@Url.Action("Details")',
					datatype: 'json',
					mtype: 'POST',
					postData: {
						id: response.responseText
					}
				}).trigger('reloadGrid');
				},

			},

			{ //ADD Clients
				height: 330,
				closeAfterAdd: true,
				addCaption: 'Добавить клиента',
				bSubmit: "Сохранить",
				bCancel: "Отменить",
				 beforeShowForm: function (form) {
					$('#Id', form).attr("disabled", true);
				},
				url: '@Url.Action("Create")',

				afterComplete: function (response) {
					jQuery('#ClientsTable').jqGrid('setGridParam', {
					url: '@Url.Action("Details")',
					datatype: 'json',
					mtype: 'POST',
					postData: {
						id: response.responseText
					}
				}).trigger('reloadGrid');
				},
			},


			{  //Удалить клиента
				width: 600,
				url: '@Url.Action("Delete")',
				closeAfterDelete: true,
				msg: "Подтвердите удаление клиента",
				delData: {
					Id: function () {
						var t_row = $('#ClientsTable').getGridParam('selrow');
						var value = $('#ClientsTable').getCell(t_row, 'Id');
						return value;
					}
				},

				afterComplete: function (response) {
					alert(response.responseText)
				},
			},
		);
	});

	$(document).ready(function () {
		$("#AvtoTable").jqGrid({
		datatype: "json",
		colNames: ['ID клиента','Марка автомобиля', 'Год выпуска', 'Гос.номер', 'Пробег','VIN','Топливо'],
		colModel: [
			{ name: 'Id_client', index: 'IdClient', width: 80,  editable: true,sortable: true },
			{ name: 'Trade_mark', index: 'TradeMark', width: 130,  editable: true,sortable: true },
			{ name: 'Year', index: 'Year', width:90,  editable: true,sortable: true,
				editoptions: {
						autocomplete: "off",
						dataInit: function (elem) {
							$(elem).mask("9999");
							$(this).val(elem);
						}
					}
				},
			{ name: 'Gosn', index: 'GosN', width: 90,  editable: true,editrules:{required:true},sortable: true },
			{ name: 'Odometr', index: 'Odometr', width: 80,  editable: true,sortable: false },
			{ name: 'Vin', index: 'Vin', width: 100,  editable: true,sortable: true },
			{ name: 'Fuel', index: 'Fuel', width: 100,  editable: true ,sortable: false }

		],
		height: 350, // число отображаемых строк
		sortname: 'Trade_mark', // сортировка по умолчанию по столбцу Id
		sortorder: "desc", // порядок сортировки
		caption: "Автомобили",
		pager: "#AutoTablePager"
		});

		$("#AvtoTable").jqGrid('navGrid', '#AutoTablePager', {
			refresh: true,
			add: true, // добавление
			del: true, // удаление
			edit: true, // редактирование
			view: true, // просмотр записи

		},

			{ // Редактирование авто
				height: 330,
				closeAfterEdit: true,
				editCaption: 'Измение данных автомобиля',  //Заголовок окна
				bSubmit: "Сохранить",  
				bCancel: "Отменить",

				url: '@Url.Action("EditAuto")', //Изменяем строку
				//Перезагружаем строку
				afterComplete: function (response) {
					jQuery('#AutoTable').jqGrid('setGridParam', {
					url: '@Url.Action("GetDataAuto")',
					datatype: 'json',
					mtype: 'POST',
					postData: {
						GosN: response.responseText
					}
					}).trigger('reloadGrid');
				},
			},

			{ //Добавить новое авто
				height: 330,
				closeAfterAdd: true,
				addCaption: 'Добавить новый автомобиль',
				bSubmit: "Сохранить",
				bCancel: "Отменить",
				 beforeShowForm: function (form) {
					$('#Id_client', form).attr("disabled", true);
					$('#Id_client', form).val(numberUsers);
				},
				url: '@Url.Action("CreateAuto")',
				afterComplete: function (response) {
					jQuery('#AutoTable').jqGrid('setGridParam', {
					url: '@Url.Action("GetDataAuto")',
					datatype: 'json',
					mtype: 'POST',
					postData: {
						GosN: response.responseText
					}
				}).trigger('reloadGrid');
				},
			},


			{  //Удалить клиента
				width: 600,
				url: '@Url.Action("Delete")',
				closeAfterDelete: true,
				msg: "Подтвердите удаление клиента",
				delData: {
					Id: function () {
						var t_row = $('#ClientsTable').getGridParam('selrow');
						var value = $('#ClientsTable').getCell(t_row, 'Id');
						return value;
					}
				},

				afterComplete: function (response) {
					alert(response.responseText)
				},
			},
		);
	});

</script>